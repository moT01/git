{
  "version": "0.1.0",
  "summary": {
    "title": "Introduction",
    "description": "> Welcome to the introduction to git lessons. Git is a popular version control system that helps manage your code. Have fun!"
  },
  "config": {
    "setup": {
      "commands": [
        "sudo cp ~/project/freeCodeCamp/.bashrc ~",
        "cd freeCodeCamp && npm install"
      ],
      "commits": [
        "0f41e89db7c21f425a5e029e739f477ee6e22980"
      ]
    },
    "testRunner": {
      "command": "./node_modules/.bin/mocha",
      "args": {
        "tap": "--reporter=mocha-tap-reporter"
      },
      "directory": "freeCodeCamp"
    },
    "repo": {
      "uri": "https://github.com/moT01/git",
      "branch": "v0.1.0"
    },
    "dependencies": [
      {
        "name": "node",
        "version": ">=10"
      }
    ]
  },
  "levels": [
    {
      "id": "10",
      "title": "Restart Terminal",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "10.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "51b1a6cd39e71daade93708fc1b40ad5a23abc7b"
            ]
          },
          "content": "**THE FIRST THING YOU NEED TO DO IS RESTART THE TERMINAL.** Type `exit` into the terminal below and press enter. After that, open a new one by clicking the \"hamburger\" menu at the top left of the window, going to the \"terminal\" section, and clicking \"new terminal\". Once you open a new one, type `echo hello git` into the terminal and press enter.\nMake some commits",
          "hints": [
            "Follow the directions closely",
            "If the tests don't pass, redo those instructions"
          ]
        }
      ]
    },
    {
      "id": "20",
      "title": "Make Directory",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "20.1",
          "setup": {
            "watchers": [
              "./freeCodeCamp/test/.next_command"
            ],
            "commits": [
              "9f751c0d1cdfbb3416673f97240f671603b84c4d"
            ]
          },
          "content": "You should be in the `project` folder in the terminal you opened. Use the terminal to make a new directory named `website` in the `project` folder. As a reminder, you can use the `mkdir` command to make a new folder.\n\ngit rir",
          "hints": [
            "Enter `mkdir website` in the terminal from the `project` folder",
            "Enter `cd ~/project` to get to the `project` folder if you aren't there",
            "Don't try to create the folder with another method"
          ]
        }
      ]
    },
    {
      "id": "30",
      "title": "Change Directory",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "30.1",
          "setup": {
            "watchers": [
              "./.git/rebase-merge/done"
            ],
            "commits": [
              "8e3263603c315ca50b93ea5e42007c17a856ea31"
            ]
          },
          "content": "Use the \"change directory\" command in the terminal to change to your new folder.\n\nreword",
          "hints": [
            "Enter `cd website` into the terminal",
            "Make sure you are in the `project` folder first",
            "Enter `cd ~/project` to get to the `project` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "40",
      "title": "Initialize a git Repository",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "40.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "dd00bf1e1466170c6ee9b44c90fed05e928eb6fc"
            ]
          },
          "content": "This folder will be your git repository. To turn it into one, type `git init` into the terminal from this folder.\n\nchange commit message",
          "hints": [
            "Enter `git init` into the terminal while in the `git-practice` folder",
            "Make sure you are in the `git-practice` folder first",
            "Enter `cd ~/project/git-practice` to get to the `git-practice` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "50",
      "title": "Git Status",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "50.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "caab2ce9d10d8a735a53e92649480c9e17693f5f"
            ]
          },
          "content": "You can use `git status` to see the status of where you are with your repository. This command is your best friend.",
          "hints": [
            "Type `git status` into the terminal and press enter",
            "Make sure you are in the `website` folder first",
            "Enter `cd ~/project/website` to get to the `website` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "60",
      "title": "Create index.html",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "60.1",
          "setup": {
            "watchers": [
              "../website"
            ],
            "commits": [
              "4ded421e6781a27dd2c507a13d17c90a404403f2"
            ]
          },
          "content": "You are on the \"master\" branch with nothing to commit. Let's make something to commit! Create `index.html` in your website folder.",
          "hints": [
            "You can create the file from the command line with `touch index.html` while in the `website` folder",
            "Enter `cd ~/project/website` to get to the `website` folder"
          ]
        }
      ]
    },
    {
      "id": "70",
      "title": "Git Status",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "70.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "abe0729789174d9e5dbf774cdea1179f02ebd2f7"
            ]
          },
          "content": "Check your status again with `git status`",
          "hints": [
            "Type `git status` into the terminal and press enter",
            "Make sure you are in the `website` folder first",
            "Enter `cd ~/project/website` to get to the `website` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "80",
      "title": "Add index.html",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "80.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "da231ff02409f15a55976b8ac29892e0a81ed765"
            ]
          },
          "content": "It shows the file you created as \"untracked\" because it didn't exist in the last commit. It takes two steps to commit it. The first step is to \"add\" it. Use `git add index.html` to add the file.",
          "hints": [
            "Type `git add index.html` into the terminal and press enter",
            "Make sure you are in the `website` folder first",
            "Enter `cd ~/project/website` to get to the `website` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "90",
      "title": "Git Status",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "90.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "2bca1e483187617ea8fe504a172900832922f571"
            ]
          },
          "content": "Check the status again.",
          "hints": [
            "Use the \"git status\" command",
            "Enter `git status` into the terminal",
            "Make sure you are in the `website` folder first",
            "Enter `cd ~/project/website` to get to the `website` folder if you aren't there"
          ]
        }
      ]
    },
    {
      "id": "100",
      "title": "Your first commit",
      "summary": "",
      "content": "",
      "steps": [
        {
          "id": "100.1",
          "setup": {
            "watchers": [
              "../.bash_history"
            ],
            "commits": [
              "306fdf448db102f55268745a4fafb8c44f72e4f2"
            ]
          },
          "content": "The file is now added and ready to be committed. Use `git commit -m \"message\"` to commit your changes. `-m` stands for message, and whatever you put in the quotes will be the message that goes with that commit. Commit your changes with the message, `my first commit`.",
          "hints": [
            "Enter `git commit -m \"my first commit\" into the terminal",
            "Make sure you are in the `website` folder first",
            "Enter `cd ~/project/website` to get to the `website` folder if you aren't there"
          ]
        }
      ]
    }
  ]
}